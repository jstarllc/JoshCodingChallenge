basePath: /
definitions:
  main.ErrorResp:
    properties:
      error:
        type: string
    type: object
  main.Light:
    properties:
      brightness:
        description: Light brightness 0-255
        type: integer
      id:
        type: string
      name:
        type: string
      "on":
        type: boolean
      room:
        type: string
    type: object
  main.LightConcise:
    properties:
      id:
        type: string
      name:
        type: string
      room:
        type: string
    type: object
  main.LightUpdate:
    properties:
      brightness:
        description: Include to set light brightness 0-255
        type: integer
      name:
        description: Include to set light name
        type: string
      "on":
        description: Include to set light on/off
        type: boolean
      room:
        description: Include to set light room
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: |-
    API for interacting with lighting hub simulator for use in the Josh.ai Backend Engineer Coding Challenge.
    Note: Try it Out will only work if the server is running on localhost:8080.
  title: Josh.ai Coding Challenge API
  version: "1.0"
paths:
  /lights:
    get:
      description: Get list of all lights in the system.
      operationId: get-lights
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.LightConcise'
            type: array
      summary: Get summary of all lights.
      tags:
      - lights
    post:
      description: Add a new light to the system.
      operationId: add-light
      parameters:
      - description: Full state of light to add
        in: body
        name: light
        required: true
        schema:
          $ref: '#/definitions/main.Light'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Light'
        "400":
          description: invalid light data in body
          schema:
            $ref: '#/definitions/main.ErrorResp'
      summary: Add a light.
      tags:
      - lights
  /lights/{lightID}:
    delete:
      description: Remove a light from the system by ID.
      operationId: delete-light-by-id
      parameters:
      - description: ID of light
        in: path
        name: lightID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: light not found
          schema:
            $ref: '#/definitions/main.ErrorResp'
      summary: Delete a light.
      tags:
      - lights
    get:
      description: Get detailed state of a light in the system.
      operationId: get-light-by-id
      parameters:
      - description: ID of light
        in: path
        name: lightID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Light'
        "404":
          description: light not found
          schema:
            $ref: '#/definitions/main.ErrorResp'
      summary: Get details about a light.
      tags:
      - lights
    put:
      description: Update the state of a light in the system by ID.
      operationId: update-light-by-id
      parameters:
      - description: ID of light
        in: path
        name: lightID
        required: true
        type: string
      - description: State fields to update
        in: body
        name: state
        required: true
        schema:
          $ref: '#/definitions/main.LightUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Light'
        "400":
          description: invalid fields in body
          schema:
            $ref: '#/definitions/main.ErrorResp'
        "404":
          description: light not found
          schema:
            $ref: '#/definitions/main.ErrorResp'
      summary: Update a light.
      tags:
      - lights
schemes:
- http
swagger: "2.0"
